# Kubernetes Deployment
# ======================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mandate-vault
  namespace: mandate-vault
  labels:
    app: mandate-vault
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: mandate-vault
  template:
    metadata:
      labels:
        app: mandate-vault
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/api/v1/metrics"
    spec:
      serviceAccountName: mandate-vault
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      containers:
      - name: api
        image: gcr.io/PROJECT_ID/mandate-vault:latest
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        env:
        # Load from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: mandate-vault-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: mandate-vault-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: mandate-vault-config
              key: LOG_FORMAT
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: mandate-vault-config
              key: CORS_ORIGINS
        
        # Load from Secrets
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mandate-vault-secrets
              key: secret-key
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: mandate-vault-secrets
              key: database-url
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: mandate-vault-secrets
              key: sentry-dsn
              optional: true
        
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mandate-vault
              topologyKey: kubernetes.io/hostname

